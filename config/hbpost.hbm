# Copyright 2010-2017 Viktor Szakats (vsz.me/hb)

# These are mandatory inside Harbour repository, they will always
# override project options.

"{HB_BUILD_PARTS='lib'&!hblib}-stop=! Skipped because HB_BUILD_PARTS=lib"

-prgflag=-w3
-prgflag=-es2
-prgflag=-kmo
-prgflag=-i-
#-prgflag=-u+hbstrict.ch

"{HB_BUILD_LIBPATH}-L${HB_BUILD_LIBPATH}"

-harden
{HB_BUILD_PKG='yes'}-vcsts

${hb_prefix}/package/harbour.hbc{hbdyn&!__HB_3RD_DYN}

# code signing
"{win&HB_CODESIGN_KEY_PASS}-sign=${HB_CODESIGN_KEY}"
"{win&HB_CODESIGN_KEY_PASS}-signpw=${HB_CODESIGN_KEY_PASS}"

# disable .hbx updates unless requested
{!(HB_REBUILD_EXTERN='yes')}-hbx-

#{win&allmsvc&hb_comp_ver>'1600'}-cflag=-sdl
{win&allmsvc&hb_comp_ver>'1700'&_HB_MSVC_ANALYZE='yes'}-cflag=-analyze
{win&(allclang|(allmingw&hb_comp_ver>'0407'))}-ldflag=-static-libgcc
{win&(allclang|(allmingw&hb_comp_ver>'0407'))}-dflag=-static-libgcc
#{win&(allclang|(allmingw&hb_comp_ver>'0407'))&lngcpp}-ldflag=-static-libstdc++
#{win&(allclang|(allmingw&hb_comp_ver>'0401'))}-cflag=-Wstrict-overflow=4
{((linux|darwin)&gcc)|(!win&clang)}-cflag=-D_FORTIFY_SOURCE=2
{(linux|darwin)&((gcc&hb_comp_ver>'0408')|(clang&hb_comp_ver>'0304'))}-cflag=-fstack-protector-strong
{allclang}-cflag=-Wno-documentation-unknown-command

{HB_BUILD_DEBUG}-prgflag=-l-
{HB_BUILD_DEBUG}-debug
{HB_BUILD_DEBUG}-cflag=-DHB_TR_LEVEL_DEBUG

{(hbdyn|hbexe)&HB_BUILD_SHARED='yes'&!(HB_SYSLOC='yes')}-shared
{(hbdyn|hbexe)&HB_BUILD_SHARED='yes'&HB_SYSLOC='yes'}-fullshared

{(hbdyn|hbexe)&(HB_BUILD_STRIP='bin'|HB_BUILD_STRIP='all')}-strip
{hblib&(HB_BUILD_STRIP='lib'|HB_BUILD_STRIP='all')}-strip

# dynamic lib creation settings
{hbdyn}-shared
{hbdyn}-implib=${hb_lib}/${hb_outputname}_dll
{hbdyn&win&(allmingw|allclang)}-implib=${hb_lib}/${hb_outputname}
{hbdyn&unix&!android&!cygwin}-ln=${hb_dynprefix}${hb_outputname}${hb_dynext}
{hbdyn&unix&!darwin&!android&!cygwin}-ln=${hb_dynprefix}${hb_outputname}${hb_dynext}.${hb_major}.${hb_minor}
{hbdyn&unix&darwin}-ln=${hb_dynprefix}${hb_outputname}.${hb_major}.${hb_minor}${hb_dynext}
{hbdyn&android}-lharbour
{hbdyn&android}-lm
{hbdyn&(allwin|cygwin)&!__HB_3RD_DYN}-lhbmaindllp
{hbdyn}-depimplib-

"{hbdyn&darwin}-dflag=-install_name '${hb_dynprefix}${hb_outputname}${hb_dynext}'"
"{hbdyn&darwin}-dflag=-compatibility_version ${hb_major}.${hb_minor}"
"{hbdyn&darwin}-dflag=-current_version ${hb_major}.${hb_minor}.${hb_release}"
"{hbdyn&android}-dflag=-Wl,-soname,${hb_dynprefix}${hb_outputname}${hb_dynext} -Wl,--no-undefined -Wl,-z,noexecstack"
"{hbdyn&linux&!android}-dflag=-Wl,-soname,${hb_dynprefix}${hb_outputname}${hb_dynext}.${hb_major}.${hb_minor}"
"{hbdyn&sunos}-dflag=-Wl,-h,${hb_dynprefix}${hb_outputname}${hb_dynext}.${hb_major}.${hb_minor}"
"{hbdyn&win&(allmingw|allclang)&!__HB_3RD_DYN}-dflag=-Wl,--major-image-version,${hb_major}"
"{hbdyn&win&(allmingw|allclang)&!__HB_3RD_DYN}-dflag=-Wl,--minor-image-version,${hb_minor}"

# output name tweaks for dynamic libs
# NOTE: We're altering previously set output name value here
{hbdyn&unix&!darwin&!android&!cygwin}-o${hb_outputname}${hb_dynext}.${hb_major}.${hb_minor}.${hb_release}
{hbdyn&unix&darwin}-o${hb_outputname}.${hb_major}.${hb_minor}.${hb_release}${hb_dynext}
{hbdyn&unix&(cygwin|android)}-o${hb_outputname}${hb_dynext}
{hbdyn&!unix&allwin&!__HB_3RD_DYN}-o${hb_outputname}-${hb_major}${hb_minor}${hb_dynsuffix}
{hbdyn&!unix&allwin&__HB_3RD_DYN}-o${hb_outputname}${hb_dynsuffix}
{hbdyn&!unix&!allwin}-o${hb_outputname}${hb_dynsuffix}

# output dir (in sync with GNU Make)
{hblib}-o${hb_lib}/
{hbexe}-o${hb_bin}/
{hbdyn}-o${hb_dyn}/

# workdir (in sync with GNU Make)
{hblib}-workdir=${hb_lib}/${hb_work}/${hb_outputname}${hb_workdynsub}
{hbexe}-workdir=${hb_bin}/${hb_work}/${hb_outputname}${hb_workdynsub}
{hbdyn}-workdir=${hb_dyn}/${hb_work}/${hb_outputname}${hb_workdynsub}

# copy contrib-specific public files
-instfile=contrib:${_HB_PROJECT_HOME}/*.hb
-instfile=contrib:${_HB_PROJECT_HOME}/*.hbc
-instfile=contrib:${_HB_PROJECT_HOME}/*.hbx
-instfile=contrib:${_HB_PROJECT_HOME}/*.ch
-instfile=contrib:${_HB_PROJECT_HOME}/*.md
-instfile=contrib:${_HB_PROJECT_HOME}/*.txt
-instfile=contrib:${_HB_PROJECT_HOME}/LIC*
-instfile=contrib:${_HB_PROJECT_HOME}/COPYING*
-instfile=contrib:${_HB_PROJECT_HOME}/README*
-instfile=contrib_tests:${_HB_PROJECT_HOME}/tests/*.*

# install (core GNU Make)
{_HB_INST_CORE&_HB_INSTALL_LIB&hblib}-instpath=${_HB_INSTALL_LIB}/
{_HB_INST_CORE&_HB_INSTALL_BIN&hbexe}-instpath=${_HB_INSTALL_BIN}/
{_HB_INST_CORE&_HB_INSTALL_DYN&hbdyn}-instpath=${_HB_INSTALL_DYN}/
{_HB_INST_CORE&_HB_INSTALL_DYN&hbdyn&(win|os2)&HB_INSTALL_3RDDYN='yes'}-instpath=depimplibsrc:${_HB_INSTALL_DYN}/
{_HB_INST_CORE&_HB_INSTALL_INC&hblib}-instpath=inc:${_HB_INSTALL_INC}/
{_HB_INST_CORE&_HB_INSTALL_LIB}-instpath=implib:${_HB_INSTALL_LIB}/
{_HB_INST_CORE&_HB_INSTALL_ETC}-instpath=etc:${_HB_INSTALL_ETC}/
{_HB_INST_CORE&_HB_INSTALL_MAN}-instpath=man:${_HB_INSTALL_MAN}/
{_HB_INST_CORE&_HB_INSTALL_LIB&!(HB_INSTALL_IMPLIB='no')}-instpath=depimplib:${_HB_INSTALL_LIB}/
{_HB_INST_CORE&_HB_INSTALL_CONTRIB&hblib}-instpath=contrib:${_HB_INSTALL_CONTRIB}/${_HB_PROJECT_SUBDIR}/
{_HB_INST_CORE&_HB_INSTALL_CONTRIB&hblib}-instpath=contrib_tests:${_HB_INSTALL_CONTRIB}/${_HB_PROJECT_SUBDIR}/tests/
{_HB_INST_CORE}-instforce

# install (non-core GNU Make)
{_HB_INST_NONCORE&hblib}-instpath=${hb_lib}/
{_HB_INST_NONCORE&hbexe}-instpath=${hb_bin}/
{_HB_INST_NONCORE&hbdyn}-instpath=${hb_dyn}/
{_HB_INST_NONCORE&hbdyn&(win|os2)&HB_INSTALL_3RDDYN='yes'}-instpath=depimplibsrc:${hb_dyn}/
{_HB_INST_NONCORE&hblib}-instpath=inc:${hb_inc}/
{_HB_INST_NONCORE}-instpath=implib:${hb_lib}/
{_HB_INST_NONCORE}-instpath=etc:${hb_etc}/
{_HB_INST_NONCORE}-instpath=man:${hb_man}/
{_HB_INST_NONCORE&!(HB_INSTALL_IMPLIB='no')}-instpath=depimplib:${hb_lib}/
{_HB_INST_NONCORE&hblib}-instpath=contrib:${hb_addons}/${_HB_PROJECT_SUBDIR}/
{_HB_INST_NONCORE&hblib}-instpath=contrib_tests:${hb_addons}/${_HB_PROJECT_SUBDIR}/tests/
{_HB_INST_NONCORE}-instforce
